//先照抄一下plugin-normal-apk
apply from: '../plugin-normal-apk/build.gradle'

android {
    defaultConfig {
        //再把applicationId改成宿主的
//        applicationId "com.time.cat"
        applicationId "com.timecat.fake.plugin"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    //Shadow Transform后业务代码会有一部分实际引用runtime中的类
    //如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    compileOnly "com.tencent.shadow.core:runtime:$shadow_version"
}

//这段buildscript配置的dependencies是为了apply plugin: 'com.tencent.shadow.plugin'能找到实现
buildscript {

    def moduleConfigProps = new Properties()
    File moduleConfig = rootProject.file("moduleConfig.properties")
    if (moduleConfig.exists()) {
        moduleConfigProps.load(new FileInputStream(moduleConfig))
    }
    def localMavenDir = file(moduleConfigProps.localMavenPath)
    repositories {
        google()
        jcenter()
        maven { url "file://${localMavenDir.absolutePath}" }
        mavenLocal()
    }

    dependencies {
        classpath "com.tencent.shadow.core:gradle-plugin:$shadow_version"
    }
}

apply plugin: 'com.tencent.shadow.plugin'

shadow {
    packagePlugin {
        pluginTypes {
            debug {
                loaderApkConfig = new Tuple2('sample-loader-debug.apk', ':sample-loader:assembleDebug')
                runtimeApkConfig = new Tuple2('sample-runtime-debug.apk', ':sample-runtime:assembleDebug')
                pluginApks {
                    pluginApk1 {
                        businessName = 'picturebed'
//businessName相同的插件，context获取的Dir是相同的。businessName留空，表示和宿主相同业务，直接使用宿主的Dir。
                        partKey = 'upload'
                        buildTask = 'assembleDebug'
                        apkName = 'plugin-shadow-apk-debug.apk'
                        apkPath = 'plugin-shadow-apk/build/outputs/apk/debug/plugin-shadow-apk-debug.apk'
                        hostWhiteList = [
                                "com.tencent.mmkv.**",
                                "com.tencent.mmkv",
                                "io.reactivex.**",
                                "io.reactivex",
                                "com.tbruyelle.**",
                                "okhttp3.**",
                                "okhttp3",
                                "retrofit2",
                                "retrofit2.**"]
                    }
                }
            }

            release {
                loaderApkConfig = new Tuple2('sample-loader-release.apk', ':sample-loader:assembleRelease')
                runtimeApkConfig = new Tuple2('sample-runtime-release.apk', ':sample-runtime:assembleRelease')
                pluginApks {
                    pluginApk1 {
                        businessName = 'picturebed'
                        partKey = 'upload'
                        buildTask = 'assembleRelease'
                        apkName = 'plugin-shadow-apk-release.apk'
                        apkPath = 'plugin-shadow-apk/build/outputs/apk/release/plugin-shadow-apk-release.apk'
                        hostWhiteList = [
                                "com.tencent.mmkv.**",
                                "com.tencent.mmkv",
                                "io.reactivex.**",
                                "io.reactivex",
                                "com.tbruyelle.**",
                                "okhttp3.**",
                                "okhttp3",
                                "retrofit2",
                                "retrofit2.**"]
                    }
                }
            }
        }

        loaderApkProjectPath = 'sample-loader'

        runtimeApkProjectPath = 'sample-runtime'

        version = 5
        compactVersion = [1, 2, 3]
        uuidNickName = "1.1.6"
    }
}